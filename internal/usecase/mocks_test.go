// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package usecase_test is a generated GoMock package.
package usecase_test

import (
	gomock "github.com/golang/mock/gomock"
)

// MockPeer is a mock of Peer interface.
type MockPeer struct {
	ctrl     *gomock.Controller
	recorder *MockPeerMockRecorder
}

// MockPeerMockRecorder is the mock recorder for MockPeer.
type MockPeerMockRecorder struct {
	mock *MockPeer
}

// NewMockPeer creates a new mock instance.
func NewMockPeer(ctrl *gomock.Controller) *MockPeer {
	mock := &MockPeer{ctrl: ctrl}
	mock.recorder = &MockPeerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPeer) EXPECT() *MockPeerMockRecorder {
	return m.recorder
}

// MockPeerRepo is a mock of PeerRepo interface.
type MockPeerRepo struct {
	ctrl     *gomock.Controller
	recorder *MockPeerRepoMockRecorder
}

// MockPeerRepoMockRecorder is the mock recorder for MockPeerRepo.
type MockPeerRepoMockRecorder struct {
	mock *MockPeerRepo
}

// NewMockPeerRepo creates a new mock instance.
func NewMockPeerRepo(ctrl *gomock.Controller) *MockPeerRepo {
	mock := &MockPeerRepo{ctrl: ctrl}
	mock.recorder = &MockPeerRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPeerRepo) EXPECT() *MockPeerRepoMockRecorder {
	return m.recorder
}

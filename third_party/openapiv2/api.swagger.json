{
  "swagger": "2.0",
  "info": {
    "title": "common_swagger.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "DeviceService",
      "description": "Service to configure wireguard device"
    },
    {
      "name": "PeerService",
      "description": "Service to configure wireguard peers"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/device": {
      "get": {
        "summary": "Get device",
        "description": "Get device from the server.",
        "operationId": "DeviceService_GetDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers": {
      "get": {
        "summary": "Get peers",
        "description": "Get peers from the server.",
        "operationId": "PeerService_GetPeers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetPeersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add peer",
        "description": "Add peer to the server.",
        "operationId": "PeerService_AddPeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/PeerIdRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPeerRequest"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}": {
      "get": {
        "summary": "Get peer by id",
        "description": "Get peer by id from the server.",
        "operationId": "PeerService_GetPeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Peer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove peer by id",
        "description": "Remove peer by id from the server.",
        "operationId": "PeerService_RemovePeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update peer by id",
        "description": "Update peer by id on the server.",
        "operationId": "PeerService_UpdatePeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addPresharedKey": {
                  "type": "boolean"
                },
                "removePresharedKey": {
                  "type": "boolean"
                },
                "persistentKeepAlive": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/config": {
      "get": {
        "summary": "Download peer config by id",
        "description": "Download peer config by id from the server.",
        "operationId": "PeerService_DownloadPeerConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DownloadFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/disable": {
      "post": {
        "summary": "Disable peer by id",
        "description": "Disable peer by id from the server.",
        "operationId": "PeerService_DisablePeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/enable": {
      "post": {
        "summary": "Enable peer by id",
        "description": "Enable peer by id from the server.",
        "operationId": "PeerService_EnablePeer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/qr": {
      "get": {
        "summary": "Download peer qr-code by id",
        "description": "Download peer qr-code by id from the server.",
        "operationId": "PeerService_DownloadPeerQRCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DownloadFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AddPeerRequest": {
      "type": "object",
      "properties": {
        "addPresharedKey": {
          "type": "boolean"
        },
        "persistentKeepAlive": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "listenPort": {
          "type": "integer",
          "format": "int32"
        },
        "firewallMark": {
          "type": "integer",
          "format": "int32"
        },
        "maxPeersCount": {
          "type": "integer",
          "format": "int32"
        },
        "currentPeersCount": {
          "type": "integer",
          "format": "int32"
        },
        "endpoint": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "DownloadFileResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "GetPeersResponse": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Peer"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "hasNext": {
          "type": "boolean"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "string"
        },
        "allowedIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "protocolVersion": {
          "type": "integer",
          "format": "int64"
        },
        "receiveBytes": {
          "type": "string",
          "format": "int64"
        },
        "transmitBytes": {
          "type": "string",
          "format": "int64"
        },
        "lastHandshake": {
          "type": "string",
          "format": "date-time"
        },
        "hasPresharedKey": {
          "type": "boolean"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PeerIdRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Grpc-Metadata-x-api-key",
      "in": "header"
    }
  },
  "externalDocs": {
    "description": "gRPC+HTTP server for managing wireguard clients",
    "url": "https://github.com/AZhur771/wg-grpc-api"
  }
}

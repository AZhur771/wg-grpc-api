{
  "swagger": "2.0",
  "info": {
    "title": "common_swagger.proto",
    "version": "1.0"
  },
  "tags": [
    {
      "name": "DeviceService",
      "description": "Service to configure wireguard devices"
    },
    {
      "name": "PeerService",
      "description": "Service to configure wireguard peers"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/device/{device.id}": {
      "put": {
        "summary": "Update device by id",
        "description": "Update device by id on the server.",
        "operationId": "DeviceService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "device.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "device": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "firewallMark": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "mtu": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dns": {
                      "type": "string"
                    },
                    "table": {
                      "type": "string"
                    },
                    "persistentKeepAlive": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "preUp": {
                      "type": "string"
                    },
                    "preDown": {
                      "type": "string"
                    },
                    "postUp": {
                      "type": "string"
                    },
                    "postDown": {
                      "type": "string"
                    }
                  }
                },
                "fieldMask": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update device by id",
        "description": "Update device by id on the server.",
        "operationId": "DeviceService_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "device.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "device",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "firewallMark": {
                  "type": "integer",
                  "format": "int32"
                },
                "endpoint": {
                  "type": "string"
                },
                "address": {
                  "type": "string"
                },
                "mtu": {
                  "type": "integer",
                  "format": "int32"
                },
                "dns": {
                  "type": "string"
                },
                "table": {
                  "type": "string"
                },
                "persistentKeepAlive": {
                  "type": "integer",
                  "format": "int32"
                },
                "preUp": {
                  "type": "string"
                },
                "preDown": {
                  "type": "string"
                },
                "postUp": {
                  "type": "string"
                },
                "postDown": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/device/{id}": {
      "get": {
        "summary": "Get device",
        "description": "Get device from the server.",
        "operationId": "DeviceService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove device by id",
        "description": "Remove device by id from the server.",
        "operationId": "DeviceService_Remove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/devices": {
      "get": {
        "summary": "Get devices",
        "description": "Get devices from the server.",
        "operationId": "DeviceService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add device",
        "description": "Add device to the server.",
        "operationId": "DeviceService_Add",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EntityIdRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddDeviceRequest"
            }
          }
        ],
        "tags": [
          "DeviceService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers": {
      "get": {
        "summary": "Get peers",
        "description": "Get peers from the server.",
        "operationId": "PeerService_GetAll",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/GetPeersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "post": {
        "summary": "Add peer",
        "description": "Add peer to the server.",
        "operationId": "PeerService_Add",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EntityIdRequest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddPeerRequest"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}": {
      "get": {
        "summary": "Get peer by id",
        "description": "Get peer by id from the server.",
        "operationId": "PeerService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/Peer"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Remove peer by id",
        "description": "Remove peer by id from the server.",
        "operationId": "PeerService_Remove",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/config": {
      "get": {
        "summary": "Download peer config by id",
        "description": "Download peer config by id from the server.",
        "operationId": "PeerService_DownloadConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DownloadFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/disable": {
      "post": {
        "summary": "Disable peer by id",
        "description": "Disable peer by id from the server.",
        "operationId": "PeerService_Disable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/enable": {
      "post": {
        "summary": "Enable peer by id",
        "description": "Enable peer by id from the server.",
        "operationId": "PeerService_Enable",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{id}/qr": {
      "get": {
        "summary": "Download peer qr-code by id",
        "description": "Download peer qr-code by id from the server.",
        "operationId": "PeerService_DownloadQRCode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/DownloadFileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    },
    "/api/peers/{peer.id}": {
      "put": {
        "summary": "Update peer by id",
        "description": "Update peer by id on the server.",
        "operationId": "PeerService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peer.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "peer": {
                  "type": "object",
                  "properties": {
                    "addPresharedKey": {
                      "type": "boolean"
                    },
                    "removePresharedKey": {
                      "type": "boolean"
                    },
                    "persistentKeepAlive": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "dns": {
                      "type": "string"
                    },
                    "mtu": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "fieldMask": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update peer by id",
        "description": "Update peer by id on the server.",
        "operationId": "PeerService_Update2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peer.id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "peer",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addPresharedKey": {
                  "type": "boolean"
                },
                "removePresharedKey": {
                  "type": "boolean"
                },
                "persistentKeepAlive": {
                  "type": "integer",
                  "format": "int32"
                },
                "description": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "dns": {
                  "type": "string"
                },
                "mtu": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          {
            "name": "fieldMask",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PeerService"
        ],
        "security": [
          {
            "ApiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AddDeviceRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "firewallMark": {
          "type": "integer",
          "format": "int32"
        },
        "endpoint": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        },
        "dns": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "preUp": {
          "type": "string"
        },
        "preDown": {
          "type": "string"
        },
        "postUp": {
          "type": "string"
        },
        "postDown": {
          "type": "string"
        }
      }
    },
    "AddPeerRequest": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "addPresharedKey": {
          "type": "boolean"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dns": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "firewallMark": {
          "type": "integer",
          "format": "int32"
        },
        "maxPeersCount": {
          "type": "integer",
          "format": "int32"
        },
        "currentPeersCount": {
          "type": "integer",
          "format": "int32"
        },
        "endpoint": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        },
        "dns": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "preUp": {
          "type": "string"
        },
        "preDown": {
          "type": "string"
        },
        "postUp": {
          "type": "string"
        },
        "postDown": {
          "type": "string"
        }
      }
    },
    "DownloadFileResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "size": {
          "type": "string",
          "format": "int64"
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "EntityIdRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "GetDevicesResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "hasNext": {
          "type": "boolean"
        }
      }
    },
    "GetPeersResponse": {
      "type": "object",
      "properties": {
        "peers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeerAbridged"
          }
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "hasNext": {
          "type": "boolean"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "allowedIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "protocolVersion": {
          "type": "integer",
          "format": "int64"
        },
        "receiveBytes": {
          "type": "string",
          "format": "int64"
        },
        "transmitBytes": {
          "type": "string",
          "format": "int64"
        },
        "lastHandshake": {
          "type": "string",
          "format": "date-time"
        },
        "hasPresharedKey": {
          "type": "boolean"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "dns": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PeerAbridged": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "allowedIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hasPresharedKey": {
          "type": "boolean"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "dns": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UpdateDeviceData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "firewallMark": {
          "type": "integer",
          "format": "int32"
        },
        "endpoint": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        },
        "dns": {
          "type": "string"
        },
        "table": {
          "type": "string"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "preUp": {
          "type": "string"
        },
        "preDown": {
          "type": "string"
        },
        "postUp": {
          "type": "string"
        },
        "postDown": {
          "type": "string"
        }
      }
    },
    "UpdatePeerData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "addPresharedKey": {
          "type": "boolean"
        },
        "removePresharedKey": {
          "type": "boolean"
        },
        "persistentKeepAlive": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "dns": {
          "type": "string"
        },
        "mtu": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "ApiKeyAuth": {
      "type": "apiKey",
      "name": "Grpc-Metadata-x-api-key",
      "in": "header"
    }
  },
  "externalDocs": {
    "description": "gRPC+HTTP server for managing wireguard clients",
    "url": "https://github.com/AZhur771/wg-grpc-api"
  }
}
